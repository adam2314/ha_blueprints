# 
# Home Assistant Automation Blueprint
#
# Synchronize on/off states on three devices with cancel sync 
#
# Revision 0.1 - Added condition to handle cancel
# based on
# https://github.com/johanschelin/ha_blueprints/blob/main/SyncStatesThree.yml

blueprint:
  name: Synchronize Three States
  description: Bind three entities together to act in unison (selected entites must
    all support the same state values) - In this version restricted to on/off
  domain: automation
  input:
    lock:
      name: Lock Helper
      description: Mandatory - The cancel entity sync.
      selector:
        entity: {}
    switch_1:
      name: First entity
      description: Mandatory - The first entity to keep in sync.
      selector:
        entity: {}
    switch_2:
      name: Second entity
      description: Mandatory - The second entity to keep in sync.
      selector:
        entity: {}
    switch_3:
      name: Third entity
      description: Mandatory - The third entity to keep in sync.
      selector:
        entity: {}
  source_url: https://github.com/johanschelin/ha_blueprints/blob/main/SyncStatesThree.yml
mode: restart
max_exceeded: silent
variables:
  lock: !input 'lock'
  switch_1: !input 'switch_1'
  switch_2: !input 'switch_2'
  switch_3: !input 'switch_3'
trigger:
- platform: state
  entity_id: 
    - !input 'switch_1'
    - !input 'switch_2'
    - !input 'switch_3'
  from:
    - 'on'
    - 'off'
condition:
- condition: template
  value_template: '{{ states(lock) == ''on'' }}'
- condition: template
  value_template: '{{ states(switch_1) != ''unavailable'' }}'
- condition: template
  value_template: '{{ states(switch_2) != ''unavailable'' }}'
- condition: template
  value_template: '{{ states(switch_3) != ''unavailable'' }}'
action:
- service: homeassistant.turn_{{ trigger.to_state.state }}
  data:
    entity_id: '{% if trigger.from_state.entity_id == switch_1 %} {{ switch_2 }} {% elif trigger.from_state.entity_id == switch_2 %} {{ switch_1 }} {% else %} {{ switch_1 }} {% endif %}'
- service: homeassistant.turn_{{ trigger.to_state.state }}
  data:
    entity_id: '{% if trigger.from_state.entity_id == switch_1 %} {{ switch_3 }} {% elif trigger.from_state.entity_id == switch_2 %} {{ switch_3 }} {% else %} {{ switch_2 }} {% endif %}'
